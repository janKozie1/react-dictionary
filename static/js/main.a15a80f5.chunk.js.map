{"version":3,"sources":["images/search.svg","styledComponents/formComponents.js","components/UserInput.js","styledComponents/header.js","components/Header.js","styledComponents/wordRecom.js","components/WordRecom.js","styledComponents/wordDef.js","components/WordDef.js","functions/formatData.js","styledComponents/body.js","components/WordsContainer.js","styledComponents/quote.js","components/Quote.js","api/dictionary_api.js","data/quotes.js","styledComponents/main.js","components/App.js","functions/validateQuery.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","styled","form","_templateObject","Input","input","_templateObject2","Submit","_templateObject3","bg","UserInput","_ref","updateQTS","query","updateQuery","react_default","a","createElement","onSubmit","e","preventDefault","onFormSubmit","type","value","onChange","target","Header","header","header_templateObject","children","header_Header","Recom","div","wordRecom_templateObject","WordRecom","data","onClick","Word","wordDef_templateObject","WordHeader","h4","wordDef_templateObject2","DateSpan","wordDef_templateObject3","Definition","_templateObject4","fData","word","hwi","hw","replace","date","indexOf","substring","grFunction","fl","shortdef","map","concat","cxs","cxl","cxtis","cxt","formatData","wordDef_Word","index","key","rotate","keyframes","body_templateObject","RecomContainer","body_templateObject2","body_templateObject3","WordsContainer","body_templateObject4","WordColumn","_templateObject5","Wrapper","_templateObject6","components_WordRecom","body_WordsContainer","WordDef","last","length","fadeIn","quote_templateObject","QuoteWrapper","quote_templateObject2","Quote","quoteObj","quote","author","axios","create","baseURL","quotes","GlobalStyle","createGlobalStyle","main_templateObject","main_templateObject2","Heading","h2","main_templateObject3","BodyContainer","main_templateObject4","main_templateObject5","Loader","main_templateObject6","App","_useState","useState","_useState2","Object","slicedToArray","result","updateResult","_useState3","parseInt","Math","random","_useState4","_useState5","_useState6","_useState7","_useState8","status","updateStatus","_useState9","_useState10","queryToSend","fetchData","asyncToGenerator","regenerator_default","mark","_callee","q","wrap","_context","prev","next","dictionary","get","params","abrupt","sent","stop","_x","apply","this","arguments","useEffect","RegExp","test","then","err","main_Wrapper","components_Header","components_UserInput","main_Loader","components_WordsContainer","components_Quote","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a15a80f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.86edd317.svg\";","import styled from 'styled-components';\r\nimport bg from '../images/search.svg'\r\nexport let Form = styled.form`\r\n    grid-column:2/3;\r\n    grid-row:3/4;\r\n    display:grid;\r\n    grid-template-rows:1fr 36px 1fr;\r\n    grid-template-columns:36px 6fr 36px;\r\n`\r\n\r\nexport let Input = styled.input`\r\n    grid-row:2/3;\r\n    grid-column:2/3;\r\n    border-radius:4px;\r\n    font-size:1.2rem;\r\n    border:none;\r\n    text-align:center;\r\n    &:hover{\r\n        outline:none;\r\n    }\r\n`\r\nexport let Submit = styled.input`\r\n    transform:translateX(-100%);\r\n    border-radius:4px;\r\n    width:36px;\r\n    height:36px;\r\n    background:white;\r\n    border:none;\r\n    grid-column:3/4;\r\n    grid-row:2/3;\r\n    background-image:url(${bg});\r\n    background-size:50%;\r\n    background-repeat:no-repeat;\r\n    background-position:center center;\r\n    &:focus{\r\n        outline:none;\r\n        box-shadow: inset 0px 0px 5px rgba(0,0,0,0.5)\r\n    }\r\n`","import React from 'react';\r\n\r\nimport * as S from '../styledComponents/formComponents';\r\n\r\n\r\nconst UserInput = ({ updateQTS, query, updateQuery }) => {\r\n    let onFormSubmit = (e) =>{\r\n        e.preventDefault();\r\n        updateQTS(query);\r\n    }\r\n    return (\r\n        <S.Form onSubmit={(e)=>onFormSubmit(e)}>\r\n            <S.Input type='text' value={query} onChange={(e) => updateQuery(e.target.value)} />\r\n            <S.Submit type='submit' value=''/>\r\n        </S.Form>\r\n    );\r\n};\r\n\r\nexport default UserInput;","import styled from 'styled-components';\r\n\r\nexport let Header = styled.header`\r\n    background:#303F9F;\r\n    display:grid;\r\n    text-align:center;\r\n    grid-template-columns:1fr 5fr 1fr;\r\n    grid-template-rows:1fr 2fr 3fr 1fr;\r\n    height:30%;\r\n    align-content:center;\r\n    justify-items:center;\r\n    box-shadow:0 0 5px rgba(0,0,0,0.5);\r\n`\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport * as S from '../styledComponents/header'\r\n\r\nconst Header = ({children}) => {\r\n    return (\r\n        <S.Header>\r\n            {children}\r\n        </S.Header>\r\n    );\r\n};\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nexport let Recom = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    padding:2px 5px;\r\n    border: 1px solid grey;\r\n    border-radius:2px;\r\n    margin:5px;\r\n    &:hover{\r\n        cursor:pointer;\r\n        transform:scale(1.1);\r\n    }\r\n`","import React from 'react';\r\n\r\nimport * as S from '../styledComponents/wordRecom'\r\n\r\nconst WordRecom = ({ data, updateQTS }) => {\r\n    return (\r\n        <S.Recom onClick={() => updateQTS(data)}>\r\n            {data}\r\n        </S.Recom>\r\n    );\r\n};\r\n\r\nexport default WordRecom;","import styled from 'styled-components';\r\n\r\nexport let Word = styled.div`\r\n    border-radius:5px;\r\n    box-shadow:0px 0px 2px rgba(0,0,0,0.5);\r\n    height:max-content;\r\n    border:1px dashed black;\r\n    display:flex;\r\n    align-items:flex-start;\r\n    flex-direction:column;\r\n    justify-content:flex-start;\r\n    padding:10px 15px 20px 15px;\r\n    margin: 1em 0;\r\n\r\n`\r\n\r\nexport let WordHeader = styled.h4`\r\n    font-size:1.2rem;\r\n    margin:0;\r\n    padding:0;\r\n    \r\n    &::first-letter{\r\n        text-transform:uppercase;\r\n    }\r\n    >span{\r\n        font-weight:200;\r\n        font-size:0.8rem;\r\n        font-style:italic;\r\n        color:grey;\r\n    }\r\n`\r\nexport let DateSpan = styled.p`\r\n    font-size:0.7rem;\r\n    font-weight:200;\r\n    margin:0;\r\n`\r\n\r\nexport let Definition = styled.p`\r\n    margin:0;\r\n\r\n`\r\n","import React from 'react';\r\n\r\nimport {formatData} from '../functions/formatData'\r\n\r\nimport * as S from '../styledComponents/wordDef'\r\n\r\nconst Word = ({ data }) => {\r\n    let fData = formatData(data);\r\n    let { word, date, grFunction, shortdef } = fData;\r\n    return (\r\n        <S.Word>\r\n            <S.WordHeader>{word} {grFunction ? <span>  ({grFunction})</span> : null}</S.WordHeader>\r\n            <S.DateSpan>{date}</S.DateSpan>\r\n            {\r\n                shortdef.map((e, index) => {\r\n                    return <S.Definition key={index}>{index + 1} - {e}</S.Definition>\r\n                })\r\n            }\r\n        </S.Word>\r\n    );\r\n};\r\n\r\nexport default Word;","export let formatData = (data) => {\r\n    return {\r\n        word: data.hwi ? data.hwi.hw.replace(/\\*/g, \"•\") : '',\r\n        date: data.date ? data.date.indexOf('{') !== -1 ? data.date.substring(0, data.date.indexOf('{')) : data.date : 'No date',\r\n        grFunction: data.fl,\r\n        shortdef: data.shortdef[0] ? data.shortdef.map((e) => e.replace(/^[—–]/g, \"\")) : [`${data.cxs[0].cxl} ${data.cxs[0].cxtis[0].cxt}`],\r\n    }\r\n}","import styled,{keyframes} from 'styled-components';\r\n\r\nconst rotate = keyframes`\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n`\r\n\r\nexport let Loader = styled.div`\r\n    grid-column:2/3;\r\n    width: 64px;\r\n    height: 64px;\r\n    position:absolute;\r\n    left:0;\r\n    right:0;\r\n    margin:auto;\r\n    margin-top:20%;\r\n    &:after{\r\n        content: \" \";\r\n        display: block;\r\n        width: 46px;\r\n        height: 46px;\r\n        margin: 1px;\r\n        margin-top:20px;\r\n        border-radius: 50%;\r\n        border: 3px solid #303F9F;\r\n        border-color: #303F9F transparent #303F9F transparent;\r\n        animation: ${rotate} 1.2s linear infinite;\r\n    }\r\n\r\n`\r\n\r\nexport let RecomContainer = styled.div`\r\n    display:flex;\r\n    grid-column:2/3;\r\n    align-items:center;\r\n    justify-content:center;\r\n    width:100%;\r\n    flex-direction:column;\r\n    text-align:center;\r\n    >header{\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n        flex-direction:column;\r\n    }\r\n    >section{\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n        flex-wrap:wrap;\r\n    }\r\n`\r\n\r\nexport let WordsContainer = styled.div`\r\n    display:grid;\r\n    grid-column:2/3;\r\n    grid-row-gap:1em;\r\n    grid-template-columns:1fr 1fr;\r\n    grid-column-gap:1em;\r\n    @media (max-width:760px){\r\n        grid-template-columns:1fr\r\n    }\r\n`\r\n\r\nexport let WordColumn = styled.div`\r\n    display:flex;\r\n    justify-content:flex-start;\r\n    width:100%;\r\n    \r\n    flex-direction:column;\r\n`\r\n\r\nexport let Wrapper = styled.div`\r\n    grid-column:2/3;\r\n   \r\n    display:grid;\r\n    grid-template-columns:2fr 6fr 2fr;\r\n    grid-row-gap:2em;\r\n    position: relative;\r\n    @media (max-width:760px){\r\n        grid-template-columns:1fr 6fr 1fr;\r\n    }\r\n    \r\n`\r\n\r\n","import React from 'react';\r\n\r\nimport WordRecom from './WordRecom'\r\nimport WordDef from './WordDef'\r\n\r\nimport * as S from '../styledComponents/body'\r\n\r\nconst WordsContainer = ({ data, type, updateQTS }) => {\r\n    return (\r\n        <S.Wrapper>\r\n            {\r\n                type === 'recom' ?\r\n                    <S.RecomContainer>\r\n                        <header>\r\n                            <h3>No results found!</h3>\r\n                            <h4>Did you mean any of these words?</h4>\r\n                        </header>\r\n                        <section>\r\n                            {data.map((e, index) => {\r\n                                return <WordRecom data={e} key={index} updateQTS={updateQTS} />\r\n                            })}\r\n                        </section>\r\n\r\n                    </S.RecomContainer>\r\n                    :\r\n                    <S.WordsContainer >\r\n                        <S.WordColumn>\r\n                            {\r\n                                data.map((e, index) => {\r\n                                    return !(index%2) ? \r\n                                     <WordDef data={e} key={index} last={index === data.length-1} />\r\n                                     :\r\n                                     null\r\n                                })\r\n                            }\r\n                        </S.WordColumn>\r\n                        <S.WordColumn>\r\n                            {\r\n                                data.map((e, index) => {\r\n                                    return (index%2) ? \r\n                                     <WordDef data={e} key={index} last={index === data.length-1} />\r\n                                     :\r\n                                     null\r\n                                })\r\n                            }\r\n                        </S.WordColumn> \r\n                    </S.WordsContainer>\r\n\r\n            }\r\n        </S.Wrapper>\r\n    );\r\n};\r\n\r\nexport default WordsContainer;","import styled,{keyframes} from 'styled-components';\r\n\r\nconst fadeIn = keyframes`\r\n    from {\r\n        opacity:0;\r\n    }\r\n    to {\r\n        opacity:1;\r\n    }\r\n`\r\n\r\nexport let QuoteWrapper = styled.div`\r\n    @import url('https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300');\r\n    font-family: 'Open Sans Condensed',cursive;\r\n    grid-column:2/3;\r\n    height:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n    animation: ${fadeIn} 0.5s ease-in;\r\n    \r\n    >q{\r\n        font-size:1.4rem;\r\n        font-weight:300;\r\n        font-style:italic;\r\n        display:block;\r\n        width:100%;\r\n        text-align:center;\r\n       \r\n    }\r\n    >p{\r\n        font-style:italic;\r\n        font-size:1.1rem;\r\n        width:100%;\r\n        text-align:right;\r\n    }\r\n    @media (max-width:760px){\r\n        grid-template-columns:auto;\r\n    }\r\n    \r\n`\r\n\r\n","import React from 'react';\r\n\r\nimport * as S from '../styledComponents/quote'\r\n\r\nconst Quote = ({quoteObj}) => {\r\n    let {quote,author} = quoteObj;\r\n    return (\r\n        <S.QuoteWrapper>\r\n            <q>{quote}</q>   \r\n            <p>~ {author}</p>\r\n        </S.QuoteWrapper>\r\n    );\r\n};\r\nexport default Quote;","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.dictionaryapi.com/api/v3/references/collegiate/json',\r\n})\r\n\r\n ","export let quotes = [\r\n    {\r\n        quote:'All our words are but crumbs that fall down from the feast of the mind.',\r\n        author:'Kahlil Gibran, Sand and Foam'\r\n    },\r\n    {\r\n        quote:'As we must account for every idle word, so must we account for every idle silence.',\r\n        author:'Benjamin Franklin'\r\n    },\r\n    {\r\n        quote:`Be careful of the words you say,\r\n        Keep them short and sweet.\r\n        You never know, from day to day,\r\n        Which ones you'll have to eat.`,\r\n        author:'Anonymous'\r\n    },\r\n    {\r\n        quote:'A great many people think that polysyllables are a sign of intelligence.',\r\n        author:'Barbara Walters'\r\n    },\r\n    {\r\n        quote:`But words are things, and a small drop of ink,\r\n        Falling like dew, upon a thought, produces\r\n        That which makes thousands, perhaps millions, think.`,\r\n        author:'George Gordon, Lord Byron'\r\n    },\r\n    {\r\n        quote:'By words we learn thoughts, and by thoughts we learn life.',\r\n        author:'Jean Baptiste Girard'\r\n    },\r\n    {\r\n        quote:'Colors fade, temples crumble, empires fall, but wise words endure.',\r\n        author:'Edward Thorndike'\r\n    },\r\n    {\r\n        quote:'Duty is the sublimest word in our language. Do your duty in all things. You cannot do more. You should never wish to do less.',\r\n        author:'Robert E. Lee'\r\n    },\r\n    {\r\n        quote:'Good words are worth much, and cost little.',\r\n        author:'George Herbert'\r\n    },\r\n    {\r\n        quote:`It's always a bit of a struggle to get the words right, whether we're a Hemingway or a few fathoms below his level.`,\r\n        author:'Rene J. Cappon'\r\n    },\r\n    {\r\n        quote:'The most valuable of all talents is that of never using two words when one will do.',\r\n        author:'Thomas Jefferson'\r\n    },\r\n    \r\n]","import styled,{createGlobalStyle,keyframes} from 'styled-components';\r\n\r\nexport let GlobalStyle = createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css?family=Roboto');  \r\n    html{\r\n        width:100%;\r\n        >body{\r\n            font-family:'Roboto';\r\n            height:1px;\r\n            min-height:100vh;\r\n            width:100%;\r\n            padding:0;\r\n            margin:0;\r\n            position:absolute;\r\n        }\r\n    }\r\n`\r\nexport let Wrapper = styled.div`\r\nheight:1px;\r\n    min-height:100vh;\r\n`\r\n\r\nexport let Heading = styled.h2`\r\n    color:white;\r\n    grid-column:2/3;\r\n    grid-row:2/3;\r\n    font-size:1.5rem;\r\n    font-weight:normal;\r\n    display:flex;\r\n    justify-content:center;\r\n`\r\nexport let BodyContainer = styled.div`\r\n    display:grid;\r\n    grid-template-columns:2fr 6fr 2fr;\r\n    min-height:70%;\r\n    grid-row-gap:2em;\r\n    position: relative;\r\n    width:100%;\r\n    @media (max-width:760px){\r\n        grid-template-columns:1fr 6fr 1fr;\r\n    }\r\n    >h4{\r\n        grid-column:2/3;\r\n        text-align:center;\r\n        color:#FF5252;\r\n        padding-top:20%;\r\n    }\r\n`\r\n\r\n\r\nconst rotate = keyframes`\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n`\r\n\r\nexport let Loader = styled.div`\r\n    grid-column:2/3;\r\n    width: 64px;\r\n    height: 64px;\r\n    position:absolute;\r\n    left:0;\r\n    right:0;\r\n    margin:auto;\r\n    margin-top:20%;\r\n    &:after{\r\n        content: \" \";\r\n        display: block;\r\n        width: 46px;\r\n        height: 46px;\r\n        margin: 1px;\r\n        margin-top:20px;\r\n        border-radius: 50%;\r\n        border: 3px solid #303F9F;\r\n        border-color: #303F9F transparent #303F9F transparent;\r\n        animation: ${rotate} 1.2s linear infinite;\r\n    }\r\n\r\n`","import React, { useState, useEffect } from 'react';\r\n\r\nimport UserInput from './UserInput'\r\nimport Header from './Header'\r\nimport WordsContainer from './WordsContainer'\r\nimport Quote from './Quote'\r\n\r\nimport dictionary from '../api/dictionary_api';\r\n\r\nimport { validateQuery } from '../functions/validateQuery'\r\nimport { quotes } from '../data/quotes';\r\n\r\nimport * as S from '../styledComponents/main'\r\n\r\nconst App = () => {\r\n    let [result, updateResult] = useState({\r\n        data: [],\r\n        type: ''\r\n    })\r\n    let [quoteObj, setRandomQuote] = useState(quotes[(parseInt((Math.random() * 100) % quotes.length))])\r\n    let [query, updateQuery] = useState('');\r\n    let [status, updateStatus] = useState('')\r\n    let [queryToSend, updateQTS] = useState('');\r\n    let fetchData = async (q) => {\r\n        return await dictionary.get(q, {\r\n            params: {\r\n                key: '7ef7e2ba-bcbc-4d10-9f6c-4e0062a57f9a'\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        if (validateQuery(queryToSend)) {\r\n            updateQuery(queryToSend)\r\n            updateStatus('loading')\r\n            try {\r\n                fetchData(queryToSend).then((e) => {\r\n                    updateStatus('done')\r\n                    typeof e.data[0] === 'string' ? updateResult({ type: 'recom', data: e.data }) : updateResult({ type: 'definitions', data: e.data })\r\n                })\r\n            } catch (err) {\r\n                updateResult({ data: [], type: 'error' })\r\n            }\r\n\r\n        }\r\n    }, [queryToSend])\r\n    return (\r\n        <S.Wrapper>\r\n            <S.GlobalStyle />\r\n            <Header>\r\n                <S.Heading>Find the definition of a word!</S.Heading>\r\n                <UserInput updateQTS={updateQTS} query={query} updateQuery={updateQuery} />\r\n            </Header>\r\n            <S.BodyContainer>\r\n                {\r\n                    status === 'loading' ?\r\n                        <S.Loader>Loading...</S.Loader>\r\n                        : result.type === 'error' ?\r\n                            <h4>An unexpected error occured, please try again</h4>\r\n                            :\r\n                            result.type ?\r\n                                <WordsContainer data={result.data} type={result.type} updateQTS={updateQTS} status={status} />\r\n                                :\r\n                                <Quote quoteObj={quoteObj} />\r\n                }\r\n            </S.BodyContainer>\r\n        </S.Wrapper>\r\n    );\r\n};\r\n\r\nexport default App;","export let validateQuery = (query) =>{\r\n    let validationRx = new RegExp(/\\S/g)\r\n    return validationRx.test(query);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />,document.getElementById('root'))"],"sourceRoot":""}