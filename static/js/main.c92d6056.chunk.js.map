{"version":3,"sources":["images/search.svg","styledComponents/formComponents.js","components/UserInput.js","styledComponents/header.js","components/Header.js","styledComponents/wordRecom.js","components/WordRecom.js","styledComponents/wordDef.js","components/WordDef.js","functions/formatData.js","styledComponents/body.js","components/WordsContainer.js","styledComponents/quote.js","components/Quote.js","api/dictionary_api.js","data/quotes.js","styledComponents/main.js","components/App.js","functions/validateQuery.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","styled","form","_templateObject","Input","input","_templateObject2","Submit","_templateObject3","bg","UserInput","_ref","updateQTS","query","updateQuery","react_default","a","createElement","onSubmit","e","preventDefault","onFormSubmit","type","value","onChange","target","Header","header","header_templateObject","children","header_Header","Recom","div","wordRecom_templateObject","WordRecom","data","onClick","Word","wordDef_templateObject","props","only","css","wordDef_templateObject2","WordHeader","h4","wordDef_templateObject3","DateSpan","_templateObject4","Definition","_templateObject5","fData","console","log","shortdef","word","hwi","hw","replace","date","indexOf","substring","grFunction","fl","length","map","concat","cxs","cxl","cxtis","cxt","formatData","wordDef_Word","index","key","rotate","keyframes","body_templateObject","RecomContainer","body_templateObject2","body_templateObject3","WordsContainer","body_templateObject4","WordColumn","body_templateObject5","Wrapper","_templateObject6","components_WordRecom","body_WordsContainer","WordDef","fadeIn","quote_templateObject","QuoteWrapper","quote_templateObject2","Quote","quoteObj","quote","author","axios","create","baseURL","quotes","GlobalStyle","createGlobalStyle","main_templateObject","Heading","h2","main_templateObject2","BodyContainer","main_templateObject3","main_templateObject4","Loader","main_templateObject5","App","_useState","useState","_useState2","Object","slicedToArray","result","updateResult","_useState3","parseInt","Math","random","_useState5","_useState6","_useState7","_useState8","status","updateStatus","_useState9","_useState10","queryToSend","fetchData","asyncToGenerator","regenerator_default","mark","_callee","q","wrap","_context","prev","next","dictionary","get","params","catch","err","abrupt","sent","t0","stop","_x","apply","this","arguments","useEffect","RegExp","test","then","Fragment","components_Header","components_UserInput","main_Loader","components_WordsContainer","components_Quote","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c92d6056.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.86edd317.svg\";","import styled from 'styled-components';\r\nimport bg from '../images/search.svg'\r\nexport let Form = styled.form`\r\n    grid-column:2/3;\r\n    grid-row:3/4;\r\n    display:grid;\r\n    grid-template-rows:1fr 36px 1fr;\r\n    grid-template-columns:36px 6fr 36px;\r\n`\r\n\r\nexport let Input = styled.input`\r\n    grid-row:2/3;\r\n    grid-column:2/3;\r\n    border-radius:4px;\r\n    font-size:1.2rem;\r\n    border:none;\r\n    text-align:center;\r\n    &:hover{\r\n        outline:none;\r\n    }\r\n`\r\nexport let Submit = styled.input`\r\n    transform:translateX(-100%);\r\n    border-radius:4px;\r\n    width:36px;\r\n    height:36px;\r\n    background:white;\r\n    border:none;\r\n    grid-column:3/4;\r\n    grid-row:2/3;\r\n    background-image:url(${bg});\r\n    background-size:50%;\r\n    background-repeat:no-repeat;\r\n    background-position:center center;\r\n    &:focus{\r\n        outline:none;\r\n        box-shadow: inset 0px 0px 5px rgba(0,0,0,0.5)\r\n    }\r\n`","import React from 'react';\r\n\r\nimport * as S from '../styledComponents/formComponents';\r\n\r\n\r\nconst UserInput = ({ updateQTS, query, updateQuery }) => {\r\n    let onFormSubmit = (e) =>{\r\n        e.preventDefault();\r\n        updateQTS(query);\r\n    }\r\n    return (\r\n        <S.Form onSubmit={(e)=>onFormSubmit(e)}>\r\n            <S.Input type='text' value={query} onChange={(e) => updateQuery(e.target.value)} />\r\n            <S.Submit type='submit' value=''/>\r\n        </S.Form>\r\n    );\r\n};\r\n\r\nexport default UserInput;","import styled from 'styled-components';\r\n\r\nexport let Header = styled.header`\r\n    background:#303F9F;\r\n    display:grid;\r\n    text-align:center;\r\n    grid-template-columns:1fr 5fr 1fr;\r\n    grid-template-rows:1fr 2fr 3fr 1fr;\r\n    height:200px;\r\n    align-content:center;\r\n    justify-items:center;\r\n    box-shadow:0 0 5px rgba(0,0,0,0.5);\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    z-index:200;\r\n`\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport * as S from '../styledComponents/header'\r\n\r\nconst Header = ({children}) => {\r\n    return (\r\n        <S.Header>\r\n            {children}\r\n        </S.Header>\r\n    );\r\n};\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nexport let Recom = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    padding:2px 5px;\r\n    border: 1px solid grey;\r\n    border-radius:2px;\r\n    margin:5px;\r\n    &:hover{\r\n        cursor:pointer;\r\n        transform:scale(1.1);\r\n    }\r\n`","import React from 'react';\r\n\r\nimport * as S from '../styledComponents/wordRecom'\r\n\r\nconst WordRecom = ({ data, updateQTS }) => {\r\n    return (\r\n        <S.Recom onClick={() => updateQTS(data)}>\r\n            {data}\r\n        </S.Recom>\r\n    );\r\n};\r\n\r\nexport default WordRecom;","import styled,{css} from 'styled-components';\r\n\r\nexport let Word = styled.div`\r\n    border-radius:5px;\r\n    box-shadow:0px 0px 3px rgba(0,0,0,0.5);\r\n    height:max-content;\r\n    border:1px dashed black;\r\n    display:flex;\r\n    align-items:flex-start;\r\n    flex-direction:column;\r\n    justify-content:flex-start;\r\n    padding:10px 15px 20px 15px;\r\n    margin-bottom:8px;\r\n    &:last-child{\r\n        margin:0;\r\n        \r\n    }\r\n    ${props => props.only && css`\r\n        transform:translateX(50%);\r\n        @media (max-width:760px){\r\n            transform:translateX(0%);\r\n        }\r\n       \r\n    `}\r\n\r\n`\r\n\r\nexport let WordHeader = styled.h4`\r\n    font-size:1.2rem;\r\n    margin:0;\r\n    padding:0;\r\n    \r\n    &::first-letter{\r\n        text-transform:uppercase;\r\n    }\r\n    >span{\r\n        font-weight:200;\r\n        font-size:0.8rem;\r\n        font-style:italic;\r\n        color:grey;\r\n    }\r\n`\r\nexport let DateSpan = styled.p`\r\n    font-size:0.7rem;\r\n    font-weight:200;\r\n    margin:0;\r\n`\r\n\r\nexport let Definition = styled.p`\r\n    margin:0;\r\n\r\n`\r\n","import React from 'react';\r\n\r\nimport {formatData} from '../functions/formatData'\r\n\r\nimport * as S from '../styledComponents/wordDef'\r\n\r\nconst Word = ({ data,only }) => {\r\n    let fData = formatData(data);\r\n    let { word, date, grFunction, shortdef } = fData;\r\n    return (\r\n        <S.Word only={only}>\r\n            <S.WordHeader>{word} {grFunction ? <span>  ({grFunction})</span> : null}</S.WordHeader>\r\n            <S.DateSpan>{date}</S.DateSpan>\r\n            {\r\n                shortdef.map((e, index) => {\r\n                    return <S.Definition key={index}>{index + 1} - {e}</S.Definition>\r\n                })\r\n            }\r\n        </S.Word>\r\n    );\r\n};\r\n\r\nexport default Word;","export let formatData = (data) => {\r\n    console.log(data.shortdef)\r\n    return {\r\n        word: data.hwi ? data.hwi.hw.replace(/\\*/g, \"•\") : '',\r\n        date: data.date ? data.date.indexOf('{') !== -1 ? data.date.substring(0, data.date.indexOf('{')) : data.date : 'No date',\r\n        grFunction: data.fl,\r\n        shortdef: data.shortdef.length ? data.shortdef[0] ? data.shortdef.map((e) => e.replace(/^[—–]/g, \"\")) : [`${data.cxs[0].cxl} ${data.cxs[0].cxtis[0].cxt}`] : [''],\r\n    }\r\n}","import styled,{keyframes} from 'styled-components';\r\n\r\nconst rotate = keyframes`\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n`\r\n\r\nexport let Loader = styled.div`\r\n    grid-column:2/3;\r\n    width: 64px;\r\n    min-height: 64px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    flex-direction:column;\r\n    margin-bottom:10px;\r\n    >p{\r\n        margin:0;\r\n        margin-bottom:20px;\r\n    }\r\n    &:after{\r\n        content: \" \";\r\n        display: block;\r\n        width: 46px;\r\n        height: 46px;\r\n        border-radius: 50%;\r\n        border: 3px solid #303F9F;\r\n        border-color: #303F9F transparent #303F9F transparent;\r\n        animation: ${rotate} 1.2s linear infinite;\r\n    }\r\n\r\n`\r\n\r\nexport let RecomContainer = styled.div`\r\n    display:flex;\r\n    grid-column:2/3;\r\n    align-items:center;\r\n    margin-top:20px;\r\n    justify-content:flex-start;\r\n    width:100%;\r\n    flex-direction:column;\r\n    text-align:center;\r\n    >header{\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n        flex-direction:column;\r\n    }\r\n    >section{\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n        flex-wrap:wrap;\r\n    }\r\n    @media (max-width:760px){\r\n        justify-content:center;\r\n        margin:0%;\r\n    }\r\n`\r\n\r\nexport let WordsContainer = styled.div`\r\n    display:grid;\r\n    grid-column:2/3;\r\n    grid-row-gap:1em;\r\n    grid-template-columns:1fr 1fr;\r\n    grid-column-gap:1em;\r\n    @media (max-width:760px){\r\n        grid-template-columns:1fr\r\n    }\r\n`\r\n\r\nexport let WordColumn = styled.div`\r\n    display:flex;\r\n    justify-content:flex-start;\r\n    width:100%;\r\n    \r\n    flex-direction:column;\r\n`\r\n\r\nexport let Wrapper = styled.div`\r\n    grid-column:2/3;\r\n   \r\n    display:grid;\r\n    grid-template-columns:2fr 6fr 2fr;\r\n    grid-row-gap:2em;\r\n    position: relative;\r\n    @media (max-width:760px){\r\n        grid-template-columns:1fr 6fr 1fr;\r\n    }\r\n    \r\n`\r\n\r\n","import React from 'react';\r\n\r\nimport WordRecom from './WordRecom'\r\nimport WordDef from './WordDef'\r\n\r\nimport * as S from '../styledComponents/body'\r\n\r\nconst WordsContainer = ({ data, type, updateQTS }) => {\r\n    return (\r\n        <S.Wrapper>\r\n            {\r\n                type === 'recom' ?\r\n                    <S.RecomContainer>\r\n                        <header>\r\n                            <h3>No results found!</h3>\r\n                            {\r\n                                data.length ? \r\n                                <h4>Did you mean any of these words?</h4>\r\n                                :\r\n                                null\r\n                            }\r\n                            \r\n                        </header>\r\n                        <section>\r\n                            {data.map((e, index) => {\r\n                                return <WordRecom data={e} key={index} updateQTS={updateQTS} />\r\n                            })}\r\n                        </section>\r\n\r\n                    </S.RecomContainer>\r\n                    :\r\n                    <S.WordsContainer >\r\n                        <S.WordColumn>\r\n                            {\r\n                                data.map((e, index) => {\r\n                                    return !(index%2) ? \r\n                                     <WordDef data={e} key={index} only={data.length === 1} />\r\n                                     :\r\n                                     null\r\n                                })\r\n                            }\r\n                        </S.WordColumn>\r\n                        <S.WordColumn>\r\n                            {\r\n                                data.map((e, index) => {\r\n                                    return (index%2) ? \r\n                                     <WordDef data={e} key={index} only={data.length === 1} />\r\n                                     :\r\n                                     null\r\n                                })\r\n                            }\r\n                        </S.WordColumn> \r\n                    </S.WordsContainer>\r\n\r\n            }\r\n        </S.Wrapper>\r\n    );\r\n};\r\n\r\nexport default WordsContainer;","import styled,{keyframes} from 'styled-components';\r\n\r\nconst fadeIn = keyframes`\r\n    from {\r\n        opacity:0;\r\n    }\r\n    to {\r\n        opacity:1;\r\n    }\r\n`\r\n\r\nexport let QuoteWrapper = styled.div`\r\n    @import url('https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300');\r\n    font-family: 'Open Sans Condensed',cursive;\r\n    \r\n    grid-column:2/3;\r\n    height:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n    animation: ${fadeIn} 0.5s ease-in;\r\n    \r\n    >q{\r\n        font-size:1.4rem;\r\n        font-weight:300;\r\n        font-style:italic;\r\n        display:block;\r\n        width:100%;\r\n        text-align:center;\r\n       \r\n    }\r\n    >p{\r\n        font-style:italic;\r\n        font-size:1.1rem;\r\n        width:100%;\r\n        text-align:right;\r\n    }\r\n    @media (max-width:760px){\r\n        grid-template-columns:auto;\r\n    }\r\n    \r\n`\r\n\r\n","import React from 'react';\r\n\r\nimport * as S from '../styledComponents/quote'\r\n\r\nconst Quote = ({quoteObj}) => {\r\n    let {quote,author} = quoteObj;\r\n    return (\r\n        <S.QuoteWrapper>\r\n            <q>{quote}</q>   \r\n            <p>~ {author}</p>\r\n        </S.QuoteWrapper>\r\n    );\r\n};\r\nexport default Quote;","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.dictionaryapi.com/api/v3/references/collegiate/json',\r\n})\r\n\r\n ","export let quotes = [\r\n    {\r\n        quote:'All our words are but crumbs that fall down from the feast of the mind.',\r\n        author:'Kahlil Gibran, Sand and Foam'\r\n    },\r\n    {\r\n        quote:'As we must account for every idle word, so must we account for every idle silence.',\r\n        author:'Benjamin Franklin'\r\n    },\r\n    {\r\n        quote:`Be careful of the words you say,\r\n        Keep them short and sweet.\r\n        You never know, from day to day,\r\n        Which ones you'll have to eat.`,\r\n        author:'Anonymous'\r\n    },\r\n    {\r\n        quote:'A great many people think that polysyllables are a sign of intelligence.',\r\n        author:'Barbara Walters'\r\n    },\r\n    {\r\n        quote:`But words are things, and a small drop of ink,\r\n        Falling like dew, upon a thought, produces\r\n        That which makes thousands, perhaps millions, think.`,\r\n        author:'George Gordon, Lord Byron'\r\n    },\r\n    {\r\n        quote:'By words we learn thoughts, and by thoughts we learn life.',\r\n        author:'Jean Baptiste Girard'\r\n    },\r\n    {\r\n        quote:'Colors fade, temples crumble, empires fall, but wise words endure.',\r\n        author:'Edward Thorndike'\r\n    },\r\n    {\r\n        quote:'Duty is the sublimest word in our language. Do your duty in all things. You cannot do more. You should never wish to do less.',\r\n        author:'Robert E. Lee'\r\n    },\r\n    {\r\n        quote:'Good words are worth much, and cost little.',\r\n        author:'George Herbert'\r\n    },\r\n    {\r\n        quote:`It's always a bit of a struggle to get the words right, whether we're a Hemingway or a few fathoms below his level.`,\r\n        author:'Rene J. Cappon'\r\n    },\r\n    {\r\n        quote:'The most valuable of all talents is that of never using two words when one will do.',\r\n        author:'Thomas Jefferson'\r\n    },\r\n    \r\n]","import styled,{createGlobalStyle,keyframes} from 'styled-components';\r\n\r\nexport let GlobalStyle = createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css?family=Roboto');  \r\n    html{\r\n        \r\n        min-height:100%;\r\n        font-family:'Raleway','sans-serif';\r\n        overflow-y: auto;\r\n        >body{\r\n            position:absolute;\r\n            height:1px;\r\n            min-height:100%;\r\n            width:100%;\r\n            padding:0;\r\n            margin:0;\r\n            #root{\r\n                height:1px;\r\n                min-height:calc(100% - 200px);\r\n            }\r\n        }   \r\n        *,*::after,*::before{\r\n            box-sizing:border-box;\r\n        } \r\n    }\r\n`\r\n\r\nexport let Heading = styled.h2`\r\n    color:white;\r\n    grid-column:2/3;\r\n    grid-row:2/3;\r\n    font-size:1.5rem;\r\n    font-weight:normal;\r\n    display:flex;\r\n    justify-content:center;\r\n`\r\nexport let BodyContainer = styled.div`\r\n    display:grid;\r\n    grid-template-columns:2fr 6fr 2fr;\r\n    height:1px;\r\n    margin-top:200px;\r\n    padding-top:20px;\r\n    min-height:100%;\r\n    grid-row-gap:2em;\r\n    position: relative;\r\n    width:100%;\r\n    @media (max-width:760px){\r\n        grid-template-columns:1fr 6fr 1fr;\r\n    }\r\n    >h4{\r\n        grid-column:2/3;\r\n        text-align:center;\r\n        color:#FF5252;\r\n        padding-top:20%;\r\n    }\r\n`\r\n\r\n\r\nconst rotate = keyframes`\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n`\r\n\r\nexport let Loader = styled.div`\r\n    grid-column:2/3;\r\n    width: 64px;\r\n    height: 64px;\r\n    position:relative;\r\n    left:0;\r\n    right:0;\r\n    margin:auto;\r\n    margin-top:20%;\r\n    &:after{\r\n        content: \" \";\r\n        display: block;\r\n        position:absolute;\r\n        width: 46px;\r\n        height: 46px;\r\n        left:calc(50% - 23px);\r\n        margin: 1px;\r\n        margin-top:20px;\r\n        border-radius: 50%;\r\n        border: 3px solid #303F9F;\r\n        border-color: #303F9F transparent #303F9F transparent;\r\n        animation: ${rotate} 1.2s linear infinite;\r\n    }\r\n\r\n`","import React, { useState, useEffect } from 'react';\r\n\r\nimport UserInput from './UserInput'\r\nimport Header from './Header'\r\nimport WordsContainer from './WordsContainer'\r\nimport Quote from './Quote'\r\n\r\nimport dictionary from '../api/dictionary_api';\r\n\r\nimport { validateQuery } from '../functions/validateQuery'\r\nimport { quotes } from '../data/quotes';\r\n\r\nimport * as S from '../styledComponents/main'\r\n\r\nconst App = () => {\r\n    let [result, updateResult] = useState({\r\n        data: [],\r\n        type: ''\r\n    })\r\n    let [quoteObj] = useState(quotes[(parseInt((Math.random() * 100) % quotes.length))])\r\n    let [query, updateQuery] = useState('');\r\n    let [status, updateStatus] = useState('')\r\n    let [queryToSend, updateQTS] = useState('');\r\n    let fetchData = async (q) => {\r\n        try{\r\n            return await dictionary.get(q, {\r\n                params: {\r\n                    key: '7ef7e2ba-bcbc-4d10-9f6c-4e0062a57f9a'\r\n                }\r\n            }).catch(err => console.log(err))\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n        \r\n    }\r\n    useEffect(() => {\r\n        if (validateQuery(queryToSend)) {\r\n            updateQuery(queryToSend)\r\n            updateStatus('loading')\r\n            try {\r\n                fetchData(queryToSend).then((e) => {\r\n                    updateStatus('done')\r\n                    typeof e.data[0] === 'string' || !e.data[0] ? updateResult({ type: 'recom', data: e.data }) : updateResult({ type: 'definitions', data: e.data })\r\n                }).catch(err => {\r\n                    updateResult({ data: [], type: 'error' })\r\n                })\r\n            } catch (err) {\r\n                updateResult({ data: [], type: 'error' })\r\n            }\r\n\r\n        }\r\n    }, [queryToSend])\r\n    return (\r\n        <>\r\n            <S.GlobalStyle />\r\n            <Header>\r\n                <S.Heading>Find the definition of a word!</S.Heading>\r\n                <UserInput updateQTS={updateQTS} query={query} updateQuery={updateQuery} />\r\n            </Header>\r\n            <S.BodyContainer>\r\n                {\r\n                    status === 'loading' ?\r\n                        <S.Loader><p>Loading...</p></S.Loader>\r\n                        : result.type === 'error' ?\r\n                            <h4>An unexpected error occured, please try again</h4>\r\n                            :\r\n                            result.type ?\r\n                                <WordsContainer data={result.data} type={result.type} updateQTS={updateQTS} status={status} />\r\n                                :\r\n                                <Quote quoteObj={quoteObj} />\r\n                }\r\n            </S.BodyContainer>\r\n       </>\r\n    );\r\n};\r\n\r\nexport default App;","export let validateQuery = (query) =>{\r\n    let validationRx = new RegExp(/\\S/g)\r\n    return validationRx.test(query);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />,document.getElementById('root'))"],"sourceRoot":""}